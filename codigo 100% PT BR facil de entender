#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <windows.h>
#include <time.h>
#define caramida_latime 10
#define latime 54
#define inaltime 10
int a[23][80]={0},i,j,k,direction,minge_x,minge_y,bara_x,score;
char c;

void init()
{
    //******************IMPORTANTE********************
    //a partir daqui, a direção inicial da bola é definida
    direction=45;
    //***********************************************
    score=0;
    //geração das paredes nas bordas
    for(i=1;i<23;i++) a[i][1]=6;
    for(i=1;i<23;i++) a[i][79]=6;
    for(j=1;j<80;j++) a[1][j]=7;
    for(j=1;j<80;j++) a[22][j]=7;
    //geração dos tijolos (aleatório)
    srand(time(NULL));
    for(i=2;i<=inaltime;i++)
    {
        for(j=10;j<=latime;j++)
        {
           if(j%caramida_latime==0)
           {
               //os tijolos estão entre 0-9, entre 10-19, entre 20-29, entre 30-39
               a[i][j]=rand()%3+1;
               //0-nada
               //1-tijolo cinza
               //2-tijolo laranja
               //3-tijolo marrom
               //4 bola
               //5 barra
               //6 parede
               //7 parede inferior
                  for(k=j+1;k<j+caramida_latime;k++) a[i][k]=a[i][j];
           }
        }
    }
    //
    //a bola começa na posição 18,30
    a[18][19]=4;
    minge_x=18;
    minge_y=19;
    //a barra tem comprimento 10
    for(j=25;j<35;j++) a[19][j]=5;
    bara_x=25;
}
//
//
void gameplay()
{

    while(TRUE)
    {

            //system("cls"); - não usamos limpeza de tela, pois isso causa efeito de piscada
            //redesenhamos tudo
            COORD Coord;
            Coord.X = 0;
            Coord.Y = 0;
            SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Coord);
            //Desenha o placar na tela
            SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),160 );
            printf("       Score: %d\n",score);
            //printf("\n");
            //printf("\n");
            //
            for(i=1;i<23;i++)
            {
                for(j=1;j<80;j++)
                {
                    if(a[i][j]==0)  SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),120 );
                    else if(a[i][j]==1)  SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),135 );
                    else if(a[i][j]==2)  SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),79 );
                    else if(a[i][j]==3)  SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),103 );
                    else if(a[i][j]==4)  {SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),30 ); }
                    else if(a[i][j]==5)  {SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),170 );}
                    else if(a[i][j]==6)  {SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),250 );}
                    else if(a[i][j]==7)  {SetConsoleTextAttribute (GetStdHandle(STD_OUTPUT_HANDLE),250 );}
                    if(a[i][j]!=4)    printf(" ");
                    else printf("0");
                    //printf("%c",'*');
                }
                printf("\n");
            }
            //printf("****%d****",direction); - apenas para depuração (ver a direção)
            for(i=1;i<=3;i++)
            {
                Sleep(1);

                if (kbhit()) //qualquer tecla pressionada
                {
                    c = getch();
                    if(c==' ') //espaço pressionado
                    {
                        //pausa até o próximo espaço
                        for(;;)
                        {
                            Sleep(100);
                            if (kbhit())
                            {
                                c = getch();
                                if(c==' ')
                                {
                                    goto totul; //pule para "totul"
                                }
                            }
                        }
                    }
                    else //outra tecla pressionada - para a barra
                    {
                        if(c=='a') //esquerda
                        {
                            for(k=bara_x;k<bara_x+10;k++) a[19][k]=0; //limpa a posição da barra
                            bara_x-=2;
                            //nova posição
                            for(k=bara_x;k<bara_x+10;k++) a[19][k]=5;
                        }
                        if(c=='d') //direita
                        {
                            for(k=bara_x;k<bara_x+10;k++) a[19][k]=0; //limpa a posição da barra
                            bara_x+=2;
                            //nova posição
                            for(k=bara_x;k<bara_x+10;k++) a[19][k]=5;
                        }
                    }
                }
            }
            totul:;
            //movimento da bola
            //são 8 direções: sul=270, leste=0, oeste=180, norte=90, sudeste=315, nordeste=45, sudoeste=225, noroeste=135
            //********IMPORTANTE********
            //o jogo é feito de tal forma que, se a bola começar com direção 0,90,180 ou 270, não aparecerão direções 45,135,225,315
            //e o inverso também é verdadeiro
            //o jogo é feito com princípios da física
            //************************
          if(direction==0)
            {
                if(a[minge_x][minge_y+1]==0)//não há nada no caminho
                {
                    a[minge_x][minge_y+1]=4;a[minge_x][minge_y]=0;minge_y++;
                }
                else //a direção se torna oposta=180
                {
                    direction=180;

                    //dependendo do que encontra
                    if(a[minge_x][minge_y+1]==1); // tijolo cinza
                    else if(a[minge_x][minge_y+1]==2)//laranja
                    {
                        score++;
                        //é destruído
                        for(k=(minge_y+1)/caramida_latime *10;k<(minge_y+1)/caramida_latime *10+caramida_latime;k++)
                            a[minge_x][k]=0;
                    }
                    else if(a[minge_x][minge_y+1]==3)
                    {
                        score++;
                        //se torna laranja
                        for(k=(minge_y+1)/caramida_latime *10;k<(minge_y+1)/caramida_latime *10+caramida_latime;k++)
                            a[minge_x][k]=2;
                    }
                }
            }
            // continua com as outras direções (180, 90, 270, etc.), traduzindo conforme as mesmas regras.
        ...
    //se a bola cair abaixo da barra
    if(minge_x>20) {gameover();return;}
    }
}
//
// função de fim de jogo
void gameover()
{
    system("CLS");
    printf("JOGO TERMINADO!\n PRESSIONE QUALQUER TECLA PARA FECHAR O JOGO!");
    while (TRUE)
    {
        if(kbhit())
        {
            return;
        }
        Sleep(1);
    }
}
int main()
{
    init();
    gameplay();
    //SE queremos reiniciar o jogo, modifique aqui
    //
    return 0;
}
