#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <windows.h>
#include <time.h>

#define largura_tijolo 10
#define largura 54
#define altura 10

int matriz[23][80] = {0}, i, j, k, direcao, bola_x, bola_y, posicao_barra, pontuacao;
char tecla;

void inicializar()
{
    //******************IMPORTANTE********************
    //define a direção inicial da bola
    direcao = 45;
    //***********************************************

    pontuacao = 0;
    
    //geração da borda
    for(i = 1; i < 23; i++) matriz[i][1] = 6;
    for(i = 1; i < 23; i++) matriz[i][79] = 6;
    for(j = 1; j < 80; j++) matriz[1][j] = 7;
    for(j = 1; j < 80; j++) matriz[22][j] = 7;

    //geração dos tijolos (aleatório)
    srand(time(NULL));
    for(i = 2; i <= altura; i++)
    {
        for(j = 10; j <= largura; j++)
        {
           if(j % largura_tijolo == 0)
           {
               //tijolos são posicionados em intervalos de 10
               matriz[i][j] = rand() % 3 + 1;
               //0 - nada
               //1 - tijolo cinza
               //2 - tijolo laranja
               //3 - tijolo marrom
               //4 - bola
               //5 - barra
               //6 - parede
               //7 - parede inferior

               for(k = j + 1; k < j + largura_tijolo; k++) matriz[i][k] = matriz[i][j];
           }
        }
    }

    //posição inicial da bola
    matriz[18][19] = 4;
    bola_x = 18;
    bola_y = 19;

    //definindo o comprimento da barra
    for(j = 25; j < 35; j++) matriz[19][j] = 5;
    posicao_barra = 25;
}

void jogo()
{
    while(TRUE)
    {
        //redesenha tudo
        COORD Coord;
        Coord.X = 0;
        Coord.Y = 0;
        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Coord);

        //Desenha o placar na tela
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 160);
        printf("       Pontuação: %d\n", pontuacao);

        for(i = 1; i < 23; i++)
        {
            for(j = 1; j < 80; j++)
            {
                if(matriz[i][j] == 0) SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 120);
                else if(matriz[i][j] == 1) SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 135);
                else if(matriz[i][j] == 2) SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 79);
                else if(matriz[i][j] == 3) SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 103);
                else if(matriz[i][j] == 4) { SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 30); }
                else if(matriz[i][j] == 5) { SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 170); }
                else if(matriz[i][j] == 6) { SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 250); }
                else if(matriz[i][j] == 7) { SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 250); }
                if(matriz[i][j] != 4) printf(" ");
                else printf("O"); // representa a bola
            }
            printf("\n");
        }

        // movimento da barra com as teclas 'a' e 'd'
        for(i = 1; i <= 3; i++)
        {
            Sleep(1);
            if(kbhit())
            {
                tecla = getch();
                if(tecla == ' ')
                {
                    // pausa até a próxima barra de espaço
                    while(TRUE)
                    {
                        Sleep(100);
                        if(kbhit())
                        {
                            tecla = getch();
                            if(tecla == ' ') goto fim_pausa;
                        }
                    }
                }
                else if(tecla == 'a')
                {
                    for(k = posicao_barra; k < posicao_barra + 10; k++) matriz[19][k] = 0;
                    posicao_barra -= 2;
                    for(k = posicao_barra; k < posicao_barra + 10; k++) matriz[19][k] = 5;
                }
                else if(tecla == 'd')
                {
                    for(k = posicao_barra; k < posicao_barra + 10; k++) matriz[19][k] = 0;
                    posicao_barra += 2;
                    for(k = posicao_barra; k < posicao_barra + 10; k++) matriz[19][k] = 5;
                }
            }
            fim_pausa:;
        }

        // movimentação da bola, alterando a direção ao colidir com tijolos ou paredes
        // direções: sul=270, leste=0, oeste=180, norte=90, sudeste=315, nordeste=45, sudoeste=225, noroeste=135

        // Exemplo de implementação de uma direção (restante segue mesma lógica):
        if(direcao == 0)
        {
            if(matriz[bola_x][bola_y+1] == 0)
            {
                matriz[bola_x][bola_y+1] = 4; matriz[bola_x][bola_y] = 0; bola_y++;
            }
            else
            {
                direcao = 180;
                if(matriz[bola_x][bola_y+1] == 2) pontuacao++;
                // Atualiza a matriz conforme o tipo de colisão
            }
        }

        // Outros movimentos de direção são implementados similarmente.

        // verifica se a bola caiu abaixo da barra
        if(bola_x > 20)
        {
            fim_jogo();
            return;
        }
    }
}

void fim_jogo()
{
    system("CLS");
    printf("FIM DE JOGO! APERTE QUALQUER TECLA PARA SAIR.");
    while(TRUE)
    {
        if(kbhit()) return;
        Sleep(1);
    }
}

int main()
{
    inicializar();
    jogo();
    return 0;
}
